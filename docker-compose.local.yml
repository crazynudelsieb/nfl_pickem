services:
  db:
    image: postgres:15-alpine
    container_name: nfl_pickem_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-nfl_pickem_db}
      POSTGRES_USER: ${DB_USER:-nfl_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?Database password must be set}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-nfl_user} -d ${DB_NAME:-nfl_pickem_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  redis:
    image: redis:7-alpine
    container_name: nfl_pickem_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --save 60 1000 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nfl_pickem_web
    env_file:
      - .env
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql+psycopg://${DB_USER:-nfl_user}:${DB_PASSWORD}@db:5432/${DB_NAME:-nfl_pickem_db}
      - CACHE_REDIS_URL=redis://redis:6379/0
      - CACHE_TYPE=RedisCache
      - TIMEZONE=${TIMEZONE:-Europe/Vienna}
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - .:/app  # Mount source for development
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: nfl_pickem_network